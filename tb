local player = game.Players.LocalPlayer
local playerGui = player.PlayerGui
local hotbar = playerGui:FindFirstChild("Hotbar")
local backpack = hotbar:FindFirstChild("Backpack")
local hotbarFrame = backpack:FindFirstChild("Hotbar")
local baseButton = hotbarFrame:FindFirstChild("1").Base
local ToolName = baseButton.ToolName
ToolName.Text = "shoot people"
local baseButton = hotbarFrame:FindFirstChild("2").Base
local ToolName = baseButton.ToolName
ToolName.Text = "break it down"
local baseButton = hotbarFrame:FindFirstChild("3").Base
local ToolName = baseButton.ToolName
ToolName.Text = "fling them"
local baseButton = hotbarFrame:FindFirstChild("4").Base
local ToolName = baseButton.ToolName
ToolName.Text = "send people to the sky"
local function findGuiAndSetText()
    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if screenGui then
        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
        if magicHealthFrame then
            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")
            if textLabel then
                textLabel.Text = "good gaming chair"
            end
        end
    end
end



findGuiAndSetText()


local animationId = 10468665991




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- First move
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://16719107050"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2.4)

local AimbotDistance = 50
local CharacterTilt = false
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function calculateDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function getNearestCharacter()
    local closestCharacter = nil
    local shortestDistance = math.huge

    for _, obj in ipairs(character.Parent:GetChildren()) do
        if obj ~= character and obj:FindFirstChild("HumanoidRootPart") and obj:FindFirstChild("Humanoid") then
            local otherRoot = obj.HumanoidRootPart
            local playerRoot = character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distanceToTarget = calculateDistance(playerRoot.Position, otherRoot.Position)
                if distanceToTarget < shortestDistance and distanceToTarget <= AimbotDistance then
                    shortestDistance = distanceToTarget
                    closestCharacter = obj
                end
            end
        end
    end

    return closestCharacter
end

local function aimAtTarget(target)
    local playerRoot = character:FindFirstChild("HumanoidRootPart")
    if playerRoot and target and target:FindFirstChild("HumanoidRootPart") then
        local targetPosition = target.HumanoidRootPart.Position
        local direction
        if CharacterTilt then
            direction = (targetPosition - playerRoot.Position).Unit
        else
            direction = Vector3.new(
                targetPosition.X - playerRoot.Position.X,
                0,
                targetPosition.Z - playerRoot.Position.Z
            ).Unit
        end
        playerRoot.CFrame = CFrame.new(playerRoot.Position, playerRoot.Position + direction)
    end
end

RunService.RenderStepped:Connect(function()
    if Anim.IsPlaying then  -- Only aim when animation is playing
        local nearestCharacter = getNearestCharacter()
        if nearestCharacter then
            aimAtTarget(nearestCharacter)
        end
    end
end)

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10466974800




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- second move
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17097275344"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.9)
local AimbotDistance = 50
local CharacterTilt = false
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function calculateDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function getNearestCharacter()
    local closestCharacter = nil
    local shortestDistance = math.huge

    for _, obj in ipairs(character.Parent:GetChildren()) do
        if obj ~= character and obj:FindFirstChild("HumanoidRootPart") and obj:FindFirstChild("Humanoid") then
            local otherRoot = obj.HumanoidRootPart
            local playerRoot = character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distanceToTarget = calculateDistance(playerRoot.Position, otherRoot.Position)
                if distanceToTarget < shortestDistance and distanceToTarget <= AimbotDistance then
                    shortestDistance = distanceToTarget
                    closestCharacter = obj
                end
            end
        end
    end

    return closestCharacter
end

local function aimAtTarget(target)
    local playerRoot = character:FindFirstChild("HumanoidRootPart")
    if playerRoot and target and target:FindFirstChild("HumanoidRootPart") then
        local targetPosition = target.HumanoidRootPart.Position
        local direction
        if CharacterTilt then
            direction = (targetPosition - playerRoot.Position).Unit
        else
            direction = Vector3.new(
                targetPosition.X - playerRoot.Position.X,
                0,
                targetPosition.Z - playerRoot.Position.Z
            ).Unit
        end
        playerRoot.CFrame = CFrame.new(playerRoot.Position, playerRoot.Position + direction)
    end
end

RunService.RenderStepped:Connect(function()
    if Anim.IsPlaying then  -- Only aim when animation is playing
        local nearestCharacter = getNearestCharacter()
        if nearestCharacter then
            aimAtTarget(nearestCharacter)
        end
    end
end)
delay(1.3, function()
    Anim:Stop()
end)

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10471336737




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- third move
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://114095570398448"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.1


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime
local AimbotDistance = 50
local CharacterTilt = false
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function calculateDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function getNearestCharacter()
    local closestCharacter = nil
    local shortestDistance = math.huge

    for _, obj in ipairs(character.Parent:GetChildren()) do
        if obj ~= character and obj:FindFirstChild("HumanoidRootPart") and obj:FindFirstChild("Humanoid") then
            local otherRoot = obj.HumanoidRootPart
            local playerRoot = character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distanceToTarget = calculateDistance(playerRoot.Position, otherRoot.Position)
                if distanceToTarget < shortestDistance and distanceToTarget <= AimbotDistance then
                    shortestDistance = distanceToTarget
                    closestCharacter = obj
                end
            end
        end
    end

    return closestCharacter
end

local function aimAtTarget(target)
    local playerRoot = character:FindFirstChild("HumanoidRootPart")
    if playerRoot and target and target:FindFirstChild("HumanoidRootPart") then
        local targetPosition = target.HumanoidRootPart.Position
        local direction
        if CharacterTilt then
            direction = (targetPosition - playerRoot.Position).Unit
        else
            direction = Vector3.new(
                targetPosition.X - playerRoot.Position.X,
                0,
                targetPosition.Z - playerRoot.Position.Z
            ).Unit
        end
        playerRoot.CFrame = CFrame.new(playerRoot.Position, playerRoot.Position + direction)
    end
end

RunService.RenderStepped:Connect(function()
    if Anim.IsPlaying then  -- Only aim when animation is playing
        local nearestCharacter = getNearestCharacter()
        if nearestCharacter then
            aimAtTarget(nearestCharacter)
        end
    end
end)
wait(0.25)
Anim:AdjustSpeed(1)




    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12510170988




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- fourth move (last move)
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18179181663"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.1


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://17838006839"

local Anim = Humanoid:LoadAnimation(AnimAnim)

local startTime = 0.120

Anim:Play()
Anim:AdjustSpeed(0)
Anim.TimePosition = startTime
Anim:AdjustSpeed(0.7)

local AimbotDistance = 50
local CharacterTilt = false
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function calculateDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function getNearestCharacter()
    local closestCharacter = nil
    local shortestDistance = math.huge

    for _, obj in ipairs(character.Parent:GetChildren()) do
        if obj ~= character and obj:FindFirstChild("HumanoidRootPart") and obj:FindFirstChild("Humanoid") then
            local otherRoot = obj.HumanoidRootPart
            local playerRoot = character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distanceToTarget = calculateDistance(playerRoot.Position, otherRoot.Position)
                if distanceToTarget < shortestDistance and distanceToTarget <= AimbotDistance then
                    shortestDistance = distanceToTarget
                    closestCharacter = obj
                end
            end
        end
    end

    return closestCharacter
end

local function teleportToTarget(target)
    local playerRoot = character:FindFirstChild("HumanoidRootPart")
    if playerRoot and target and target:FindFirstChild("HumanoidRootPart") then
        local direction = (playerRoot.Position - target.HumanoidRootPart.Position).Unit
        playerRoot.CFrame = target.HumanoidRootPart.CFrame + direction * 1
    end
end

RunService.RenderStepped:Connect(function()
    if Anim.IsPlaying then  -- Only teleport when animation is playing
        local nearestCharacter = getNearestCharacter()
        if nearestCharacter then
            teleportToTarget(nearestCharacter)
        end
    end
end)

delay(1.2, function()
    Anim:Stop()
end)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 11343318134




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- serious punch

local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12983333733"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.5)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Wallcombo
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15944317351"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 12983333733




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


-- death counter
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13073745835"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.3


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.2)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12447707844




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- ult anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://107649573628906"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Dash anim
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://17838006839"

local Anim = Humanoid:LoadAnimation(AnimAnim)

local startTime = 0.120

Anim:Play()
Anim:AdjustSpeed(0)
Anim.TimePosition = startTime
Anim:AdjustSpeed(0.7)

local AimbotDistance = 50
local CharacterTilt = false
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function calculateDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function getNearestCharacter()
    local closestCharacter = nil
    local shortestDistance = math.huge

    for _, obj in ipairs(character.Parent:GetChildren()) do
        if obj ~= character and obj:FindFirstChild("HumanoidRootPart") and obj:FindFirstChild("Humanoid") then
            local otherRoot = obj.HumanoidRootPart
            local playerRoot = character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distanceToTarget = calculateDistance(playerRoot.Position, otherRoot.Position)
                if distanceToTarget < shortestDistance and distanceToTarget <= AimbotDistance then
                    shortestDistance = distanceToTarget
                    closestCharacter = obj
                end
            end
        end
    end

    return closestCharacter
end

local function aimAtTarget(target)
    local playerRoot = character:FindFirstChild("HumanoidRootPart")
    if playerRoot and target and target:FindFirstChild("HumanoidRootPart") then
        local targetPosition = target.HumanoidRootPart.Position
        local direction
        if CharacterTilt then
            direction = (targetPosition - playerRoot.Position).Unit
        else
            direction = Vector3.new(
                targetPosition.X - playerRoot.Position.X,
                0,
                targetPosition.Z - playerRoot.Position.Z
            ).Unit
        end
        playerRoot.CFrame = CFrame.new(playerRoot.Position, playerRoot.Position + direction)
    end
end

RunService.RenderStepped:Connect(function()
    if Anim.IsPlaying then  -- Only aim when animation is playing
        local nearestCharacter = getNearestCharacter()
        if nearestCharacter then
            aimAtTarget(nearestCharacter)
        end
    end
end)

delay(1.2, function()
    Anim:Stop()
end)



    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Uppercut anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14001963401"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242




local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Downslam anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17859015788"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.1120


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0.10)

Anim.TimePosition = startTime

Anim:AdjustSpeed(3)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")

-- Saitama m1s

local animationIdsToStop = {

    [10469493270] = true,

    [10469630950] = true,

    [10469639222] = true,

    [10469643643] = true,

}

-- rechange m1s

local replacementAnimations = {

    ["10469643643"] = "rbxassetid://13491635433",

    ["10469639222"] = "rbxassetid://13295919399",

    ["10469630950"] = "rbxassetid://17889461810",

    ["10469493270"] = "rbxassetid://17889458563",

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()
        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end)
